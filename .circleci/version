#!/usr/bin/env python3

from jinja2 import Template
import json
import sys
import os
import re
import subprocess
import yaml
from datetime import datetime
from circle_env import CircleEnv

class Version(CircleEnv):

    def __init__(self):
        super(Version, self).__init__()
        self.run()

    def run(self):
        if self.is_release():
            version = self.make_release_version()
        elif self.is_master():
            version = self.make_master_version()
        elif self.is_release_branch():
            version = self.make_branch_version()
        else:
            version = self.make_default_version()
        print(version)

    def make_default_version(self):
        now = datetime.now()
        return now.strftime("%Y.%-m.%-d")

    def make_pr_version(self):
        version = self.get_pr_parent_branch()
        if version == 'master':
            return self.make_master_version()
        else:
            return self.make_branch_version()

    def make_master_version(self):
        now = datetime.now()
        return now.strftime("%Y.%-m.%-d")

    def make_branch_version(self):
        latest = self.run_cmd([self.build_root +'/parent_tag'])
        return self.tag_to_version(latest)

    def make_release_version(self):
        return self.tag_to_version(self.tag)

if __name__ == "__main__":
    Version()
